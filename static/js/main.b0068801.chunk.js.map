{"version":3,"sources":["components/Users.js","components/Header.js","components/DisplayBoard.js","components/CreateUser.js","components/LoginUser.js","services/UserService.js","App.js","serviceWorker.js","components/AppError.js","index.js"],"names":["Users","users","console","log","length","userTable","map","user","index","key","className","firstName","lastName","email","UserRow","to","Header","logout","style","width","padding","backgroundColor","color","textAlign","cursor","onClick","e","role","aria-label","DisplayBoard","numberOfUsers","getAllUsers","logoutHandle","type","CreateUser","onChangeForm","createUser","htmlFor","onChange","name","id","aria-describedby","placeholder","LoginUser","a","authtoken","localStorage","getItem","fetch","mode","headers","Authorization","credentials","response","json","data","method","body","JSON","stringify","App","useState","loggedIn","setIsLogin","setUser","setUsers","setNumberOfUsers","navigate","useNavigate","fetchAllUsers","then","useEffect","target","value","path","element","Login","setItem","token","exact","res","removeItem","Boolean","window","location","hostname","match","ErrorComponent","AppError","state","hasError","componentDidCatch","error","info","setState","this","children","props","React","Component","getDerivedStateFromError","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b0068801.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Users = ({ users }) => {\r\n  console.log(\"users length:::\", users.length);\r\n  if (users.length === 0) return null;\r\n\r\n  const UserRow = (user, index) => {\r\n    return (\r\n      <tr key={index} className={index % 2 === 0 ? \"odd\" : \"even\"}>\r\n        <td>{index + 1}</td>\r\n        <td>{user.firstName}</td>\r\n        <td>{user.lastName}</td>\r\n        <td>{user.email}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const userTable = users.map((user, index) => UserRow(user, index));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <h2>Users</h2>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <Link to=\"/users/create\" className=\"btn btn-danger\">\r\n            Create\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>User Id</th>\r\n            <th>Firstname</th>\r\n            <th>Lastname</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{userTable}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = ({ logout }) => {\r\n  const headerStyle = {\r\n    width: \"100%\",\r\n    padding: \"1%\",\r\n    backgroundColor: \"#f87878\",\r\n    color: \"white\",\r\n    textAlign: \"right\",\r\n  };\r\n\r\n  return (\r\n    <div style={headerStyle}>\r\n      <h1 style={{ cursor: \"pointer\" }} onClick={(e) => logout()}>\r\n        <span role=\"img\" aria-label=\"\">\r\n          &#128516;\r\n        </span>\r\n        <span>Logout</span>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"../components/Header\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nexport const DisplayBoard = ({ numberOfUsers, getAllUsers, logoutHandle }) => {\r\n  return (\r\n    <>\r\n      <Header logout={logoutHandle}></Header>\r\n\r\n      <div className=\"container mrgnbtm p-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div>\r\n              <fieldset>\r\n                <legend>Js cookie:</legend>\r\n                <details>\r\n                  <summary>set cookie by JS</summary>\r\n                  <p>\r\n                    <b>\r\n                      document.cookie = \"jsCookie=jscookievalue; expires=Wed, 05 Aug 2022 23:00:00 UTC;\r\n                      path=/\"\r\n                    </b>\r\n                  </p>\r\n                </details>\r\n                <details>\r\n                  <summary>Set Same name cookie</summary>\r\n                  <p>\r\n                    <b>\r\n                      document.cookie = \"HttpOnly-CookieKey=jscookievalue; expires=Wed, 05 Aug 2022 23:00:00\r\n                      UTC; path=/\"\r\n                    </b>\r\n                  </p>\r\n                </details>\r\n                <details>\r\n                  <summary>Set HttpOnly cookie from JS</summary>\r\n                  <p>\r\n                    <b>\r\n                      document.cookie = \"jsCookie=jscookievalue; expires=Wed, 05 Aug 2022 23:00:00 UTC;\r\n                      path=/\" httpOnly=true\r\n                    </b>\r\n                  </p>\r\n                </details>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div style={{ backgroundColor: \"rgb(214 154 85 / 85%)\" }} className=\"display-board\">\r\n              <h4 style={{ color: \"white\" }}>Users Created</h4>\r\n              <div className=\"number\">{numberOfUsers}</div>\r\n              <div className=\"btn\">\r\n                <button type=\"button\" onClick={(e) => getAllUsers()} className=\"btn btn-warning\">\r\n                  Get all Users\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\n\r\nconst CreateUser = ({onChangeForm, createUser }) => {\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-7 mrgnbtm\">\r\n                <h2>Create User</h2>\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"exampleInputEmail1\">First Name</label>\r\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)}  className=\"form-control\" name=\"firstname\" id=\"firstname\" aria-describedby=\"emailHelp\" placeholder=\"First Name\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"exampleInputPassword1\">Last Name</label>\r\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"lastname\" id=\"lastname\" placeholder=\"Last Name\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"email\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Email\" />\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" onClick= {(e) => createUser()} className=\"btn btn-danger\">Create</button>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser","import React from \"react\";\r\n\r\nconst LoginUser = ({ onChangeForm, LoginUser }) => {\r\n  return (\r\n    <div className=\"container p-3 my-3 bg-primary text-white\">\r\n      <div className=\"row \">\r\n        <div className=\"col-md-7 mrgnbtm\">\r\n          <h2>LogIn</h2>\r\n          <form>\r\n            <div className=\"row \">\r\n              <div className=\"form-group col-md-12\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={(e) => onChangeForm(e)}\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" onClick={(e) => LoginUser(e)} className=\"btn btn-danger\">\r\n              Go\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","export async function getAllUsers() {\r\n  var authtoken = localStorage.getItem(\"__token\");\r\n  try {\r\n    const response = await fetch(\"/abc/ks!djf!!ksdf\", {\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: authtoken,\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function createUser(data) {\r\n  var authtoken = localStorage.getItem(\"__token\");\r\n  const response = await fetch(`/abc/uidij!23&dd`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: authtoken,\r\n    },\r\n    credentials: \"include\",\r\n    body: JSON.stringify({ user: data }),\r\n  });\r\n  return await response.json();\r\n}\r\n\r\nexport async function Login(data) {\r\n  const response = await fetch(`/abc/posdfir@3!!`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    credentials: \"include\",\r\n    body: JSON.stringify({ user: data }),\r\n  });\r\n  return await response.json();\r\n}\r\n\r\nexport async function logout() {\r\n  const response = await fetch(`/abc/ji@213sd@`, {\r\n    mode: \"cors\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n  return await response.json();\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { Users } from \"./components/Users\";\r\nimport { DisplayBoard } from \"./components/DisplayBoard\";\r\nimport CreateUser from \"./components/CreateUser\";\r\nimport LoginUser from \"./components/LoginUser\";\r\nimport { getAllUsers, createUser, Login, logout } from \"./services/UserService\";\r\n\r\nfunction App() {\r\n  const [loggedIn, setIsLogin] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [users, setUsers] = useState([]);\r\n  const [numberOfUsers, setNumberOfUsers] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  const userCreate = (e) => {\r\n    createUser(user).then((response) => {\r\n      setNumberOfUsers(numberOfUsers + 1);\r\n      fetchAllUsers();\r\n    });\r\n  };\r\n\r\n  const userLogin = (e) => {\r\n    Login(user).then((response) => {\r\n      localStorage.setItem(\"__token\", response.token);\r\n      fetchAllUsers();\r\n      setIsLogin(true);\r\n      navigate(\"/users\");\r\n    });\r\n  };\r\n\r\n  const fetchAllUsers = () => {\r\n    getAllUsers().then((users) => {\r\n      setUsers(users);\r\n      setNumberOfUsers(users.length);\r\n    });\r\n    navigate(\"/users/list\");\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    logout().then((res) => {\r\n      localStorage.removeItem(\"__token\");\r\n      setIsLogin(false);\r\n      navigate(\"/\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {}, [loggedIn]);\r\n\r\n  const onChangeForm = (e) => {\r\n    if (e.target.name === \"firstname\") {\r\n      user.firstName = e.target.value;\r\n    } else if (e.target.name === \"lastname\") {\r\n      user.lastName = e.target.value;\r\n    } else if (e.target.name === \"email\") {\r\n      user.email = e.target.value;\r\n    }\r\n    setUser(user);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={<LoginUser user={user} onChangeForm={onChangeForm} LoginUser={userLogin} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"users\"\r\n          element={\r\n            <DisplayBoard\r\n              numberOfUsers={numberOfUsers}\r\n              getAllUsers={fetchAllUsers}\r\n              logoutHandle={logoutHandler}\r\n            />\r\n          }\r\n        >\r\n          <Route path=\"/users/list\" element={<Users users={users} />} />\r\n          <Route\r\n            path=\"/users/create\"\r\n            element={<CreateUser user={user} onChangeForm={onChangeForm} createUser={userCreate} />}\r\n          />\r\n        </Route>\r\n      </Routes>\r\n\r\n      {/* {loggedIn && (\r\n        <>\r\n          <Header logout={logoutHandler}></Header>\r\n          <div className=\"container mrgnbtm\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8\">\r\n                <CreateUser user={user} onChangeForm={onChangeForm} createUser={userCreate}></CreateUser>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <DisplayBoard numberOfUsers={numberOfUsers} getAllUsers={fetchAllUsers}></DisplayBoard>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mrgnbtm\">\r\n            <Users users={users}></Users>\r\n          </div>\r\n        </>\r\n      )}\r\n      {!loggedIn && (\r\n        <>\r\n          <div className=\"container mrgnbtm\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8\">\r\n                <LoginUser user={user} onChangeForm={onChangeForm} LoginUser={userLogin}></LoginUser>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst ErrorComponent = () => {\r\n  return <h1>Something went wrong</h1>;\r\n};\r\n\r\nexport class AppError extends React.Component {\r\n  \r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError = error => {\r\n    return { hasError: true };\r\n  };\r\n\r\n  componentDidCatch = (error, info) => {\r\n    this.setState({ error, info });\r\n  };\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    const { children } = this.props;\r\n\r\n    return hasError ? <ErrorComponent /> : children;\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { AppError } from \"./components/AppError\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <AppError>\r\n      <App />\r\n    </AppError>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}